module project_lab2(input Clock, input Reset,input[3:0]A,input[3:0]B,input[2:0]OPcode,output reg[3:0]C,output reg ZF, output reg CF, output reg SF);
    reg[1:0]temp;
    reg carry;
    initial carry=0;
    reg [2:0] count;
    initial temp=0;
    initial count=0;
    parameter [2:0] RESET = 3'b000, AND = 3'b001, ADD = 3'b010, NOR = 3'b011, SUB = 3'b100;
always @(posedge Clock)
begin
if (Reset==1)
    begin
   	 temp=0;
   	 count=1;
    end
else
    begin
    if (OPcode==RESET)
   	 begin
   	 temp=0;
   	 count=1;
   	 end
    else if (OPcode==AND)
   	 begin
   	 if (count==1)
   		 begin

   		 C[0]=A[0]&B[0];
   		 count=2;
   		 end
   	 else if (count==2)
   		 begin
   		 C[1]=A[1]&B[1];
   		 count=3;
   		 end
   	 else if (count==3)
   		 begin
   		 C[2]=A[2]&B[2];
   		 count=4;
   		 end
   	 else if (count==4)
   		 begin
   		 C[3]=A[3]&B[3];
   		 if (C==0)
   			 ZF=1;
   		 else
   			 ZF=0;
   			 SF=C[3];
   			 CF=0;
   			 count=0;
   		 end
   	 end
    else if (OPcode==ADD)
   	 begin
   	 if (count==1)
   		 begin
   		 temp=A[0]+B[0];
   		 C[0]=temp[0];
   		 carry=temp[1];
   		 count=2;
   		 end
   	 else if (count==2)
   		 begin
   		 temp=A[1]+B[1]+carry;
   		 C[1]=temp[0];
   		 carry=temp[1];
   		 count=3;
   		 end
   	 else if (count==3)
   		 begin
   		 temp=A[2]+B[2]+carry;
   		 C[2]=temp[0];
   		 carry=temp[1];
   		 count=4;
   		 end
   	 else if (count==4)
   		 begin
   		 temp=A[3]+B[3]+carry;
   		 C[3]=temp[0];
   		 carry=temp[1];
   		 if (C==0)
   			 ZF=1;
   		 else
   			 ZF=0;
   			 SF=C[3];
   			 CF=carry;
   			 carry=0;
   			 count=0;
   		 end
   	 end
    else if (OPcode==NOR)
   	 begin
   	 if (count==1)
   		 begin
   		 C[0]=~(A[0]|B[0]);
   		 count=2;
   		 end
   	 else if (count==2)
   		 begin
   		 C[1]=~(A[1]|B[1]);
   		 count=3;
   		 end
   	 else if (count==3)
   		 begin
   		 C[2]=~(A[2]|B[2]);
   		 count=4;
   		 end
   	 else if (count==4)
   		 begin
   		 C[3]=~(A[3]|B[3]);
   		 if (C==0)
   			 ZF=1;
   		 else
   			 ZF=0;
   			 SF=C[3];
   			 CF=carry;
   			 count=0;
   		 end
   	 end
    else if (OPcode==SUB)
   	 begin
   	 
   		 begin
   		 temp=A[0]-B[0];
   		 C[0]=temp[0];
   		 carry=temp[1];
   		 count=2;
   		 end
   	 if (count==2)
   		 begin
   		 temp=A[1]-B[1]-carry;
   		 C[1]=temp[0];
   		 carry=temp[1];
   		 count=3;
   		 end
   	 else if (count==3)
   		 begin
   		 temp=A[2]-B[2]-carry;
   		 C[2]=temp[0];
   		 carry=temp[1];
   		 count=4;
   		 end
   	 else if (count==4)
   		 begin
   		 temp=A[3]-B[3]-carry;
   		 C[3]=temp[0];
   		 carry=temp[1];
   		 if (C==0)
   			 ZF=1;
   		 else
   			 ZF=0;
   			 SF=C[3];
   			 CF=carry;
   			 carry=0;
   			 count=0;
   		 end
   	 end
    end
end
endmodule


